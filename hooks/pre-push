#!/bin/bash

# Pre-push hook that prevents pushing to master if running make would modify tracked files

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Read the remote name and URL from stdin
remote="$1"
url="$2"

# Only check when pushing to master
while read local_ref local_sha remote_ref remote_sha
do
    if [[ "$remote_ref" == "refs/heads/master" || "$remote_ref" == "refs/heads/main" ]]; then
        echo -e "${BOLD}${BLUE}üîç Checking if 'make' would modify tracked files before pushing to master...${NC}"
        
        # Store current git status
        if ! git diff-index --quiet HEAD --; then
            echo -e "${BOLD}${RED}‚ùå Error: Working directory is not clean. Please commit or stash changes before pushing.${NC}"
            exit 1
        fi
        
        # Get current state of tracked files that might be modified by make
        git_status_before=$(git status --porcelain)
        
        # Run linting first
        echo -e "${BOLD}${CYAN}üîç Running 'npm run lint'...${NC}"
        if ! npm run lint; then
            echo -e "${BOLD}${RED}‚ùå Error: Linting failed. Please fix linting issues before pushing.${NC}"
            exit 1
        fi
        
        # Run make
        echo -e "${BOLD}${CYAN}üî® Running 'make'...${NC}"
        if ! make; then
            echo -e "${BOLD}${RED}‚ùå Error: 'make' command failed. Please fix build issues before pushing.${NC}"
            exit 1
        fi
        
        # Check if any tracked files were modified
        git_status_after=$(git status --porcelain)
        
        if [[ "$git_status_before" != "$git_status_after" ]]; then
            echo -e "${BOLD}${RED}‚ùå Error: Running 'make' modified tracked files.${NC}"
            echo -e "${YELLOW}üìù Modified files:${NC}"
            git status --porcelain
            echo ""
            echo -e "${PURPLE}üí° Please run 'make' locally, commit the changes, and try pushing again.${NC}"
            echo -e "${PURPLE}   This ensures the repository stays in sync with generated content.${NC}"
            exit 1
        fi
        
        echo -e "${BOLD}${GREEN}‚úÖ 'make' completed without modifying tracked files. Push allowed.${NC}"
    fi
done

exit 0